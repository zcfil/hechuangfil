// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-11-11 14:02:26.7107585 +0800 CST m=+25.505892801

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "1503780117@qq.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/addRole": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "新增角色",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "角色",
                        "name": "SysRole",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SysRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/dept/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "新增组织机构",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "组织",
                        "name": "sysDept",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SysDept"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/dept/check/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "审核通过",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "商户申请人id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/dept/verify": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "查询待审核的组织",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "当前页数",
                        "name": "pageNo",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "每页数据",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "用户登录",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "loginDto",
                        "name": "loginDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/merchants/register": {
            "post": {
                "description": "商户注册申请",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "MerchantsDto",
                        "name": "MerchantsDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MerchantsDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "用户户注册",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "sysUser",
                        "name": "sysUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SysUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "用户退出",
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.LoginDto": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.MerchantsDto": {
            "type": "object",
            "properties": {
                "createDate": {
                    "type": "object",
                    "$ref": "#/definitions/entity.JsonTime"
                },
                "creator": {
                    "type": "integer"
                },
                "delFlag": {
                    "type": "integer"
                },
                "deptId": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "headUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mobile": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "pid": {
                    "type": "integer"
                },
                "pids": {
                    "type": "string"
                },
                "realName": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "sort": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "superAdmin": {
                    "type": "integer"
                },
                "updateDate": {
                    "type": "string"
                },
                "updater": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "verifield": {
                    "type": "integer"
                }
            }
        },
        "entity.JsonTime": {
            "$ref": "#/definitions/time.Time"
        },
        "entity.SysDept": {
            "type": "object",
            "properties": {
                "createDate": {
                    "type": "string",
                    "example": "2020-05-27"
                },
                "creator": {
                    "type": "integer"
                },
                "delFlag": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pid": {
                    "type": "integer"
                },
                "pids": {
                    "type": "string"
                },
                "sort": {
                    "type": "integer"
                },
                "updateDate": {
                    "type": "string",
                    "example": "2020-05-27"
                },
                "updater": {
                    "type": "integer"
                }
            }
        },
        "entity.SysRole": {
            "type": "object",
            "properties": {
                "createDate": {
                    "type": "string",
                    "example": "2020-05-27"
                },
                "creator": {
                    "type": "integer"
                },
                "delFlag": {
                    "type": "integer"
                },
                "deptId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "updateDate": {
                    "type": "string",
                    "example": "2020-05-27"
                },
                "updater": {
                    "type": "integer"
                }
            }
        },
        "entity.SysUser": {
            "type": "object",
            "properties": {
                "createDate": {
                    "type": "object",
                    "$ref": "#/definitions/entity.JsonTime"
                },
                "creator": {
                    "type": "integer"
                },
                "delFlag": {
                    "type": "integer"
                },
                "deptId": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "headUrl": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "realName": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "superAdmin": {
                    "type": "integer"
                },
                "updateDate": {
                    "type": "string"
                },
                "updater": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "verifield": {
                    "type": "integer"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "token",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "127.0.0.1:8080",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Swagger Example API",
	Description: "This is a sample server Petstore server.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
